#!/bin/sh
#
# Hangman game - run ./hangman to play the game
# Usage - You have upto 7 attempts to guess it right. Correct attempts don't count

   main()
   {
      WORD=$(./random_word) # Get random word
      NUM_GUESSES=0
      MAX_GUESSES=7
      ANSWER=$(explode $WORD) 
      GUESSES=""
      CURRENT=$("$WORD" | tr [a-z] '-') 
      C=""

      while true
      do
         clear
         cat hm.$NUM_GUESSES

         echo Guesses: "$GUESSES" # Print outs
         echo Word: "$CURRENT"
         echo Guess? $C

         C=$(read_one_char) # Auxiliary script to read characters

         tput cup 10 0

         PREVIOUS_GUESS=$(echo $GUESSES | tr -cd $C | wc -c)
         
         if [ $PREVIOUS_GUESS -gt 0 ]
         then
             echo You already guessed $C
         else 
             GUESSES="$C $GUESSES"
         fi

         CURRENT=$(echo "$WORD" | sed "s/[^$GUESSES]/-/g") # Leave dashes for the
         # incorrect guesses

         if [ "$CURRENT" = "$WORD" ]
         then
             echo You guessed "$WORD" right # Successfully getting the answer
             break
         else

             OCCURENCE=$(echo $ANSWER | tr -cd $C | wc -c) # Count the number ofoccurences of current guess

             if [ $OCCURENCE -eq 0 ] # Advance guesses if it hasn't been guessed before
             then 
                 NUM_GUESSES=$(expr $NUM_GUESSES + 1)
             fi

             if [ $NUM_GUESSES -gt $MAX_GUESSES ] # Bail out after max num of guesses
             then
                 echo Sorry the correct word was "$WORD"
                 break
             fi
         fi
      done
   }

   # Provided by the professor
   explode()
   {
      echo "$1" | sed 's/./& /g'
   }

   read_one_char()
   {
       stty -icanon min 1
       dd ibs=1 count=1 status=noxfer 2>/dev/null
       stty icanon
   }

   main "$@" # Used for avoiding global variables
